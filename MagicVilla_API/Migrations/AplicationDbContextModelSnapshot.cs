// <auto-generated />
using System;
using MagicVilla_API.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MagicVilla_API.Migrations
{
    [DbContext(typeof(AplicationDbContext))]
    partial class AplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MagicVilla_API.Models.Villa", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Amenity")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Population")
                        .HasColumnType("int");

                    b.Property<double>("Rate")
                        .HasColumnType("float");

                    b.Property<int>("SquareMeter")
                        .HasColumnType("int");

                    b.Property<DateTime>("dateCreate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("dateUpdate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Villas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Amenity = "",
                            Description = "Un lugar junto al más que nos permite disfrutar",
                            ImageUrl = "",
                            Name = "El mar y tu",
                            Population = 5,
                            Rate = 100.0,
                            SquareMeter = 230,
                            dateCreate = new DateTime(2024, 8, 2, 13, 20, 10, 598, DateTimeKind.Local).AddTicks(3268),
                            dateUpdate = new DateTime(2024, 8, 2, 13, 20, 10, 598, DateTimeKind.Local).AddTicks(3282)
                        },
                        new
                        {
                            Id = 2,
                            Amenity = "",
                            Description = "Un lugar en la sierra, para generar los mejores recuerdos",
                            ImageUrl = "",
                            Name = "Momentos serranos",
                            Population = 6,
                            Rate = 150.0,
                            SquareMeter = 210,
                            dateCreate = new DateTime(2024, 8, 2, 13, 20, 10, 598, DateTimeKind.Local).AddTicks(3284),
                            dateUpdate = new DateTime(2024, 8, 2, 13, 20, 10, 598, DateTimeKind.Local).AddTicks(3285)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
